==72425== Memcheck, a memory error detector
==72425== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==72425== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==72425== Command: ./lem-in
==72425== Parent PID: 71575
==72425== 
==72425== Conditional jump or move depends on uninitialised value(s)
==72425==    at 0x10000485C: ft_strlen (in ./lem-in)
==72425==    by 0x100004F9B: ft_strjoin (in ./lem-in)
==72425==    by 0x10000319F: readfile (readfile.c:25)
==72425==    by 0x100003086: lem_in_gnl (readfile.c:75)
==72425==    by 0x100001CFA: read_ants (parse.c:153)
==72425==    by 0x10000461B: main (main.c:35)
==72425== 
==72425== Conditional jump or move depends on uninitialised value(s)
==72425==    at 0x100004FED: ft_strjoin (in ./lem-in)
==72425==    by 0x10000319F: readfile (readfile.c:25)
==72425==    by 0x100003086: lem_in_gnl (readfile.c:75)
==72425==    by 0x100001CFA: read_ants (parse.c:153)
==72425==    by 0x10000461B: main (main.c:35)
==72425== 
==72425== 
==72425== HEAP SUMMARY:
==72425==     in use at exit: 18,384 bytes in 164 blocks
==72425==   total heap usage: 194 allocs, 30 frees, 1,032,906 bytes allocated
==72425== 
==72425== 1 bytes in 1 blocks are definitely lost in loss record 1 of 44
==72425==    at 0x1000A5626: malloc (in /Users/nalonso/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==72425==    by 0x1000048CC: ft_strdup (in ./lem-in)
==72425==    by 0x100002F74: check_end (readfile.c:48)
==72425==    by 0x1000030F3: lem_in_gnl (readfile.c:83)
==72425==    by 0x100001BA4: read_rooms (parse.c:122)
==72425==    by 0x100004630: main (main.c:37)
==72425== 
==72425== 72 bytes in 3 blocks are possibly lost in loss record 27 of 44
==72425==    at 0x1000A5C8A: calloc (in /Users/nalonso/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==72425==    by 0x1005BF832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==72425==    by 0x1005D2D6A: map_images (in /usr/lib/libobjc.A.dylib)
==72425==    by 0x10001403B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==72425==    by 0x100014255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==72425==    by 0x10020D00A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==72425==    by 0x1005BF072: _objc_init (in /usr/lib/libobjc.A.dylib)
==72425==    by 0x1001A068D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==72425==    by 0x1001A063A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==72425==    by 0x1000B49D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==72425==    by 0x100024A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==72425==    by 0x100024C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==72425== 
==72425== LEAK SUMMARY:
==72425==    definitely lost: 1 bytes in 1 blocks
==72425==    indirectly lost: 0 bytes in 0 blocks
==72425==      possibly lost: 72 bytes in 3 blocks
==72425==    still reachable: 406 bytes in 7 blocks
==72425==         suppressed: 17,905 bytes in 153 blocks
==72425== Reachable blocks (those to which a pointer was found) are not shown.
==72425== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==72425== 
==72425== For counts of detected and suppressed errors, rerun with: -v
==72425== Use --track-origins=yes to see where uninitialised values come from
==72425== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 12 from 12)
